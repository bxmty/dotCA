name: QA Terraform Provisioning

on:
  push:
    branches:
      - qa
  workflow_dispatch:

jobs:
  provision-infrastructure:
    name: Provision QA Infrastructure
    runs-on: ubuntu-latest
    outputs:
      droplet_ip: ${{ steps.get_ip.outputs.ip }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0
          
      - name: Setup DigitalOcean CLI
        run: |
          curl -sL https://github.com/digitalocean/doctl/releases/download/v1.94.0/doctl-1.94.0-linux-amd64.tar.gz | tar -xzv
          sudo mv doctl /usr/local/bin/
          doctl auth init -t ${{ secrets.DO_TOKEN }}
      
      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init
        
      - name: Terraform Plan
        working-directory: ./terraform
        run: |
          terraform plan \
            -var="do_token=${{ secrets.DO_TOKEN }}" \
            -var="ssh_key_fingerprint=${{ secrets.SSH_KEY_FINGERPRINT }}" \
            -var="git_repo_url=${{ github.server_url }}/${{ github.repository }}.git" \
            -var="git_branch=qa" \
            -out=tfplan
        
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan
        
      - name: Capture Droplet IP
        working-directory: ./terraform
        id: get_ip
        run: |
          DROPLET_IP=$(terraform output -raw droplet_ip | tr -d '\n')
          echo "DROPLET_IP=${DROPLET_IP}" >> $GITHUB_ENV
          echo "ip=${DROPLET_IP}" >> $GITHUB_OUTPUT
      
      - name: Store IP Address for Ansible
        run: |
          echo "${{ steps.get_ip.outputs.ip }}" > terraform_ip.txt
          
      - name: Upload IP Address Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform-output
          path: terraform_ip.txt
          retention-days: 1
      
      - name: Trigger Ansible Workflow
        uses: peter-evans/repository-dispatch@v2
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          event-type: terraform-completed
          client-payload: '{"droplet_ip": "${{ steps.get_ip.outputs.ip }}"}'