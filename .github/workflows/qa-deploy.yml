name: QA Provision, Build, and Deploy

on:
  push:
    branches:
      - qa

jobs:
  deploy-qa:
    name: Deploy QA Environment
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.0.0
          
      - name: Setup DigitalOcean CLI
        run: |
          curl -sL https://github.com/digitalocean/doctl/releases/download/v1.94.0/doctl-1.94.0-linux-amd64.tar.gz | tar -xzv
          sudo mv doctl /usr/local/bin/
          doctl auth init -t ${{ secrets.DO_TOKEN }}
      
      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible
          
      - name: Setup SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
      - name: Initialize Terraform
        working-directory: ./terraform
        run: terraform init
        
      - name: Terraform Plan
        working-directory: ./terraform
        run: |
          terraform plan \
            -var="do_token=${{ secrets.DO_TOKEN }}" \
            -var="ssh_key_fingerprint=${{ secrets.SSH_KEY_FINGERPRINT }}" \
            -var="git_repo_url=${{ github.server_url }}/${{ github.repository }}.git" \
            -var="git_branch=qa" \
            -out=tfplan
        
      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve tfplan
        
      - name: Capture Droplet IP
        working-directory: ./terraform
        id: get_ip
        run: |
          DROPLET_IP=$(terraform output -raw droplet_ip | tr -d '\n')
          echo "DROPLET_IP=${DROPLET_IP}" >> $GITHUB_ENV
          echo "ip=${DROPLET_IP}" >> $GITHUB_OUTPUT
          
      - name: Add host key to known hosts
        run: |
          # Wait a bit for the droplet to be ready
          sleep 30
          ssh-keyscan -H ${{ steps.get_ip.outputs.ip }} >> ~/.ssh/known_hosts
      
      - name: Deploy using Ansible
        env:
          GIT_REPO_URL: "${{ github.server_url }}/${{ github.repository }}.git"
          SSH_KEY_PATH: "~/.ssh/id_rsa"
          GITHUB_ACTIONS: "true"
          DROPLET_IP: ${{ env.DROPLET_IP }}
        run: |
          chmod +x ./deploy.sh
          ./deploy.sh qa
      
      - name: QA Deployment Status
        run: |
          echo "‚úÖ QA environment has been deployed with Ansible!"
          echo "üåê Access it at http://${{ env.DROPLET_IP }}/"